{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gpx.min.js","webpack:///webpack/bootstrap 2cc23b2461eb8664e230","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","GPX","gpxContent","xmlDoc","DOMParser","parseFromString","waypoints","querySelectorAll","Error","start","Date","querySelector","textContent","end","timeDiff","Math","abs","getTime","total","millisecondsToTime","totalMS","duration","seconds","parseInt","minutes","hours","days","hoursDays","arguments","undefined","distance","getUTCMinutes","getUTCSeconds","elevationObject","gain","loss","diff","parseFloat","push","elevation","max","apply","min","distanceInKm","calcDistanceBetweenPoints","wp1","wp2","point1","lat","getAttribute","PI","lon","alt","point2","dp","asin","sqrt","pow","sin","cos","d","h"],"mappings":"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","file":"gpx.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gpx\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gpx\"] = factory();\n\telse\n\t\troot[\"gpx\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gpx\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gpx\"] = factory();\n\telse\n\t\troot[\"gpx\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * GPX parser class\n\t * @class GPX\n\t */\n\t\n\tvar GPX = function () {\n\t\n\t  /**\n\t   * GPX constructor.\n\t   * @param {string} gpxContent - The xml string of the GPX file.\n\t   * @constructs GPX\n\t   */\n\t\n\t  function GPX(gpxContent) {\n\t    _classCallCheck(this, GPX);\n\t\n\t    /**\n\t     * The xml string of the GPX file.\n\t     * @member GPX#gpxContent\n\t     */\n\t    this.gpxContent = gpxContent;\n\t    /**\n\t     * The parsed gpxContent into DOM.\n\t     * @member GPX#xmlDoc\n\t     */\n\t    this.xmlDoc = new DOMParser().parseFromString(this.gpxContent, 'application/xml');\n\t\n\t    /**\n\t     * Object of all waypoints in the gpx DOM.\n\t     * @member GPX#waypoints\n\t     */\n\t    this.waypoints = this.xmlDoc.querySelectorAll('trkpt');\n\t\n\t    if (this.waypoints.length === 0) {\n\t      throw new Error('This file has no trackpointns (trkpt)');\n\t    }\n\t  }\n\t\n\t  _createClass(GPX, [{\n\t    key: 'duration',\n\t    value: function duration() {\n\t      var start = new Date(this.waypoints[0].querySelector('time').textContent),\n\t          end = new Date(this.waypoints[this.waypoints.length - 1].querySelector('time').textContent),\n\t          timeDiff = Math.abs(end.getTime() - start.getTime()),\n\t          total = this.millisecondsToTime(timeDiff);\n\t\n\t      return {\n\t        start: start,\n\t        end: end,\n\t        totalMS: timeDiff,\n\t        total: total\n\t      };\n\t    }\n\t  }, {\n\t    key: 'millisecondsToTime',\n\t    value: function millisecondsToTime(duration) {\n\t      var seconds = parseInt(duration / 1000 % 60, 10),\n\t          minutes = parseInt(duration / (1000 * 60) % 60, 10),\n\t          hours = parseInt(duration / (1000 * 60 * 60) % 24, 10),\n\t          days = parseInt(duration / (1000 * 60 * 60 * 24), 10),\n\t          hoursDays = parseInt(days * 24, 10);\n\t\n\t      hours += hoursDays;\n\t      hours = hours < 10 ? '0' + hours : hours;\n\t      minutes = minutes < 10 ? '0' + minutes : minutes;\n\t      seconds = seconds < 10 ? '0' + seconds : seconds;\n\t      return hours === '00' ? minutes + ':' + seconds : hours + ':' + minutes + ':' + seconds;\n\t    }\n\t  }, {\n\t    key: 'pace',\n\t    value: function pace() {\n\t      var duration = arguments.length <= 0 || arguments[0] === undefined ? this.duration().totalMS : arguments[0];\n\t      var distance = arguments.length <= 1 || arguments[1] === undefined ? this.distance() : arguments[1];\n\t\n\t      var minutes = new Date(duration / distance).getUTCMinutes(),\n\t          seconds = new Date(duration / distance).getUTCSeconds();\n\t\n\t      return {\n\t        minutes: minutes < 10 ? '0' + minutes : minutes,\n\t        seconds: seconds < 10 ? '0' + seconds : seconds\n\t      };\n\t    }\n\t  }, {\n\t    key: 'elevation',\n\t    value: function elevation() {\n\t      var elevationObject = [],\n\t          gain = 0,\n\t          loss = 0;\n\t\n\t      for (var i = 0; i < this.waypoints.length - 1; i++) {\n\t        var diff = parseFloat(this.waypoints[i + 1].querySelector('ele').textContent) - parseFloat(this.waypoints[i].querySelector('ele').textContent);\n\t\n\t        if (diff < 0) {\n\t          loss += diff;\n\t        }\n\t\n\t        if (diff > 0) {\n\t          gain += diff;\n\t        }\n\t\n\t        elevationObject.push(parseFloat(this.waypoints[i].querySelector('ele').textContent));\n\t      }\n\t\n\t      return {\n\t        elevation: elevationObject,\n\t        max: Math.max.apply(null, elevationObject),\n\t        min: Math.min.apply(null, elevationObject),\n\t        loss: loss,\n\t        gain: gain\n\t      };\n\t    }\n\t  }, {\n\t    key: 'distance',\n\t    value: function distance() {\n\t      var distanceInKm = 0;\n\t\n\t      for (var i = 0; i < this.waypoints.length - 1; i++) {\n\t        distanceInKm += this.calcDistanceBetweenPoints(this.waypoints[i], this.waypoints[i + 1]);\n\t      }\n\t\n\t      return distanceInKm;\n\t    }\n\t  }, {\n\t    key: 'calcDistanceBetweenPoints',\n\t    value: function calcDistanceBetweenPoints(wp1, wp2) {\n\t      var point1 = {\n\t        lat: parseFloat(wp1.getAttribute('lat')) * (Math.PI / 180),\n\t        lon: parseFloat(wp1.getAttribute('lon')) * (Math.PI / 180),\n\t        alt: parseFloat(wp1.querySelector('ele').textContent) / 1000\n\t      },\n\t          point2 = {\n\t        lat: parseFloat(wp2.getAttribute('lat')) * (Math.PI / 180),\n\t        lon: parseFloat(wp2.getAttribute('lon')) * (Math.PI / 180),\n\t        alt: parseFloat(wp2.querySelector('ele').textContent) / 1000\n\t      },\n\t          dp = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin((point1.lat - point2.lat) / 2), 2) + Math.cos(point1.lat) * Math.cos(point2.lat) * Math.pow(Math.sin((point1.lon - point2.lon) / 2), 2))),\n\t          d = dp * 6366,\n\t          h = Math.sqrt(Math.pow(d, 2) + Math.pow(point2.alt - point1.alt, 2));\n\t\n\t      return h;\n\t    }\n\t  }]);\n\t\n\t  return GPX;\n\t}();\n\t\n\texports.default = GPX;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** gpx.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2cc23b2461eb8664e230\n **/","/**\n * GPX parser class\n * @class GPX\n */\nexport default class GPX{\n\n  /**\n   * GPX constructor.\n   * @param {string} gpxContent - The xml string of the GPX file.\n   * @constructs GPX\n   */\n  constructor( gpxContent ){\n    /**\n     * The xml string of the GPX file.\n     * @member GPX#gpxContent\n     */\n    this.gpxContent = gpxContent;\n    /**\n     * The parsed gpxContent into DOM.\n     * @member GPX#xmlDoc\n     */\n    this.xmlDoc = new DOMParser().parseFromString( this.gpxContent, 'application/xml' );\n\n    /**\n     * Object of all waypoints in the gpx DOM.\n     * @member GPX#waypoints\n     */\n    this.waypoints = this.xmlDoc.querySelectorAll( 'trkpt' );\n\n    if( this.waypoints.length === 0 ){\n      throw new Error( 'This file has no trackpointns (trkpt)' );\n    }\n  }\n\n  duration(){\n    let start = new Date( this.waypoints[ 0 ].querySelector( 'time' ).textContent ),\n      end = new Date( this.waypoints[ this.waypoints.length - 1 ].querySelector( 'time' ).textContent ),\n      timeDiff = Math.abs( end.getTime() - start.getTime() ),\n      total = this.millisecondsToTime( timeDiff );\n\n    return {\n      start: start,\n      end: end,\n      totalMS: timeDiff,\n      total: total\n    };\n  }\n\n  millisecondsToTime( duration ){\n    let seconds = parseInt( ( duration / 1000 ) % 60, 10 ),\n      minutes = parseInt( ( duration / ( 1000 * 60 ) ) % 60, 10 ),\n      hours = parseInt( ( duration / ( 1000 * 60 * 60 ) ) % 24, 10 ),\n      days = parseInt( duration / ( 1000 * 60 * 60 * 24 ), 10 ),\n      hoursDays = parseInt( days * 24, 10 );\n\n    hours += hoursDays;\n    hours = ( hours < 10 ) ? '0' + hours : hours;\n    minutes = ( minutes < 10 ) ? '0' + minutes : minutes;\n    seconds = ( seconds < 10 ) ? '0' + seconds : seconds;\n    return ( hours === '00' ) ? minutes + ':' + seconds : hours + ':' + minutes + ':' + seconds;\n  }\n\n  pace( duration = this.duration().totalMS, distance = this.distance() ){\n    let minutes = new Date( duration / distance ).getUTCMinutes(),\n      seconds = new Date( duration / distance ).getUTCSeconds();\n\n    return {\n      minutes: ( minutes < 10 ) ? '0' + minutes : minutes,\n      seconds: ( seconds < 10 ) ? '0' + seconds : seconds\n    };\n  }\n\n  elevation(){\n    let elevationObject = [],\n      gain = 0, loss = 0;\n\n    for( let i = 0; i < this.waypoints.length - 1; i++ ){\n      let diff = parseFloat( this.waypoints[ i + 1 ].querySelector( 'ele' ).textContent ) - parseFloat( this.waypoints[ i ].querySelector( 'ele' ).textContent );\n\n      if( diff < 0 ){\n        loss += diff;\n      }\n\n      if( diff > 0 ){\n        gain += diff;\n      }\n\n      elevationObject.push( parseFloat( this.waypoints[ i ].querySelector( 'ele' ).textContent ) );\n    }\n\n    return {\n      elevation: elevationObject,\n      max: Math.max.apply( null, elevationObject ),\n      min: Math.min.apply( null, elevationObject ),\n      loss: loss,\n      gain: gain\n    };\n  }\n\n  distance(){\n    let distanceInKm = 0;\n\n    for( let i = 0; i < this.waypoints.length - 1; i++ ){\n      distanceInKm += this.calcDistanceBetweenPoints( this.waypoints[ i ], this.waypoints[ i + 1 ] );\n    }\n\n    return distanceInKm;\n  }\n\n  calcDistanceBetweenPoints( wp1, wp2 ){\n    let point1 = {\n        lat: parseFloat( wp1.getAttribute( 'lat' ) ) * ( Math.PI / 180 ),\n        lon: parseFloat( wp1.getAttribute( 'lon' ) ) * ( Math.PI / 180 ),\n        alt: parseFloat( wp1.querySelector( 'ele' ).textContent ) / 1000\n      },\n      point2 = {\n        lat: parseFloat( wp2.getAttribute( 'lat' ) ) * ( Math.PI / 180 ),\n        lon: parseFloat( wp2.getAttribute( 'lon' ) ) * ( Math.PI / 180 ),\n        alt: parseFloat( wp2.querySelector( 'ele' ).textContent ) / 1000\n      },\n      dp = 2 * Math.asin( Math.sqrt( Math.pow( Math.sin( ( point1.lat - point2.lat ) / 2 ), 2 ) + Math.cos( point1.lat ) * Math.cos( point2.lat ) * Math.pow( Math.sin( ( point1.lon - point2.lon ) / 2 ), 2 ) ) ),\n      d = dp * 6366,\n      h = Math.sqrt( Math.pow( d, 2 ) + Math.pow( point2.alt - point1.alt, 2 ) );\n\n    return h;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}