!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("gpx",[],e):"object"==typeof exports?exports.gpx=e():t.gpx=e()}(this,function(){return function(t){function e(a){if(n[a])return n[a].exports;var o=n[a]={exports:{},id:a,loaded:!1};return t[a].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}();Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(e){if(n(this,t),this.gpxContent=e,this.xmlDoc=(new DOMParser).parseFromString(this.gpxContent,"application/xml"),this.waypoints=this.xmlDoc.querySelectorAll("trkpt"),0===this.waypoints.length)throw new Error("This file has no trackpointns (trkpt)")}return a(t,[{key:"duration",value:function(){var t=new Date(this.waypoints[0].querySelector("time").textContent),e=new Date(this.waypoints[this.waypoints.length-1].querySelector("time").textContent),n=Math.abs(e.getTime()-t.getTime()),a=this.millisecondsToTime(n);return{start:t,end:e,totalMS:n,total:a}}},{key:"millisecondsToTime",value:function(t){var e=parseInt(t/1e3%60,10),n=parseInt(t/6e4%60,10),a=parseInt(t/36e5%24,10),o=parseInt(t/864e5,10),r=parseInt(24*o,10);return a+=r,a=10>a?"0"+a:a,n=10>n?"0"+n:n,e=10>e?"0"+e:e,"00"===a?n+":"+e:a+":"+n+":"+e}},{key:"pace",value:function(){var t=arguments.length<=0||void 0===arguments[0]?this.duration().totalMS:arguments[0],e=arguments.length<=1||void 0===arguments[1]?this.distance():arguments[1],n=new Date(t/e).getUTCMinutes(),a=new Date(t/e).getUTCSeconds();return{minutes:10>n?"0"+n:n,seconds:10>a?"0"+a:a}}},{key:"elevation",value:function(){for(var t=[],e=0,n=0,a=0;a<this.waypoints.length-1;a++){var o=parseFloat(this.waypoints[a+1].querySelector("ele").textContent)-parseFloat(this.waypoints[a].querySelector("ele").textContent);0>o&&(n+=o),o>0&&(e+=o),t.push(parseFloat(this.waypoints[a].querySelector("ele").textContent))}return{elevation:t,max:Math.max.apply(null,t),min:Math.min.apply(null,t),loss:n,gain:e}}},{key:"distance",value:function(){for(var t=0,e=0;e<this.waypoints.length-1;e++)t+=this.calcDistanceBetweenPoints(this.waypoints[e],this.waypoints[e+1]);return t}},{key:"calcDistanceBetweenPoints",value:function(t,e){var n={lat:parseFloat(t.getAttribute("lat"))*(Math.PI/180),lon:parseFloat(t.getAttribute("lon"))*(Math.PI/180),alt:parseFloat(t.querySelector("ele").textContent)/1e3},a={lat:parseFloat(e.getAttribute("lat"))*(Math.PI/180),lon:parseFloat(e.getAttribute("lon"))*(Math.PI/180),alt:parseFloat(e.querySelector("ele").textContent)/1e3},o=2*Math.asin(Math.sqrt(Math.pow(Math.sin((n.lat-a.lat)/2),2)+Math.cos(n.lat)*Math.cos(a.lat)*Math.pow(Math.sin((n.lon-a.lon)/2),2))),r=6366*o,i=Math.sqrt(Math.pow(r,2)+Math.pow(a.alt-n.alt,2));return i}}]),t}();e["default"]=o,t.exports=e["default"]}])});
//# sourceMappingURL=gpx.min.js.map