!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("gpx",[],e):"object"==typeof exports?exports.gpx=e():t.gpx=e()}(this,function(){return function(t){function e(a){if(n[a])return n[a].exports;var i=n[a]={exports:{},id:a,loaded:!1};return t[a].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}();Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(e){if(n(this,t),this.gpxContent=e,this.xmlDoc=(new DOMParser).parseFromString(this.gpxContent,"application/xml"),this.trkpts=this.xmlDoc.querySelectorAll("trkpt"),this.waypoints=this.createJsonFromGpxDom(),0===this.waypoints.length)throw new Error("This file has no trackpointns (trkpt)")}return a(t,[{key:"createJsonFromGpxDom",value:function(){for(var t=[],e=0;e<this.trkpts.length;e++)t.push({lon:parseFloat(this.trkpts[e].getAttribute("lon")),lat:parseFloat(this.trkpts[e].getAttribute("lat")),elevation:parseFloat(this.trkpts[e].querySelector("ele").textContent),time:this.trkpts[e].querySelector("time").textContent});return t}},{key:"duration",value:function(){var t=new Date(this.waypoints[0].time),e=new Date(this.waypoints[this.waypoints.length-1].time),n=Math.abs(e.getTime()-t.getTime()),a=this.millisecondsToTime(n);return{start:t,end:e,totalMS:n,total:a}}},{key:"millisecondsToTime",value:function(t){var e=parseInt(t/1e3%60,10),n=parseInt(t/6e4%60,10),a=parseInt(t/36e5%24,10),i=parseInt(t/864e5,10),o=parseInt(24*i,10);return a+=o,a=10>a?"0"+a:a,n=10>n?"0"+n:n,e=10>e?"0"+e:e,"00"===a?n+":"+e:a+":"+n+":"+e}},{key:"pace",value:function(){var t=arguments.length<=0||void 0===arguments[0]?this.duration().totalMS:arguments[0],e=arguments.length<=1||void 0===arguments[1]?this.distance():arguments[1],n=new Date(t/e).getUTCMinutes(),a=new Date(t/e).getUTCSeconds();return{minutes:10>n?"0"+n:n,seconds:10>a?"0"+a:a}}},{key:"elevation",value:function(){for(var t=[],e=[],n=0,a=0,i=new Date(this.waypoints[0].time).getTime(),o=0,s=0;s<this.waypoints.length-1;s++){var r=this.waypoints[s+1].elevation-this.waypoints[s].elevation,l=new Date(this.waypoints[s+1].time).getTime(),p=Math.abs(l-i);o+=this.calcDistanceBetweenPoints(this.waypoints[s],this.waypoints[s+1]),0>r&&(a+=r),r>0&&(n+=r),t.push(this.waypoints[s].elevation),e.push({elevation:this.waypoints[s].elevation,time:this.millisecondsToTime(p),dist:o})}return{elevation:e,max:Math.max.apply(null,t),min:Math.min.apply(null,t),loss:a,gain:n}}},{key:"distance",value:function(){for(var t=0,e=0;e<this.waypoints.length-1;e++)t+=this.calcDistanceBetweenPoints(this.waypoints[e],this.waypoints[e+1]);return t}},{key:"calcDistanceBetweenPoints",value:function(t,e){var n={lat:t.lat*(Math.PI/180),lon:t.lon*(Math.PI/180),alt:t.elevation/1e3},a={lat:e.lat*(Math.PI/180),lon:e.lon*(Math.PI/180),alt:e.elevation/1e3},i=2*Math.asin(Math.sqrt(Math.pow(Math.sin((n.lat-a.lat)/2),2)+Math.cos(n.lat)*Math.cos(a.lat)*Math.pow(Math.sin((n.lon-a.lon)/2),2))),o=6366*i,s=Math.sqrt(Math.pow(o,2)+Math.pow(a.alt-n.alt,2));return s}}]),t}();e["default"]=i,t.exports=e["default"]}])});
//# sourceMappingURL=gpx.min.js.map